# Script de Atualiza√ß√£o - React 19, Next.js 15 e Depend√™ncias Modernas
# Executar no PowerShell: .\upgrade-dependencies.ps1

Write-Host "üöÄ Iniciando atualiza√ß√£o para React 19, Next.js 15 e depend√™ncias modernas..." -ForegroundColor Green

# Verificar se est√° em um reposit√≥rio Git
if (-not (Test-Path ".git")) {
    Write-Host "‚ö†Ô∏è  Aviso: N√£o detectado reposit√≥rio Git. Recomendado criar backup manual do projeto." -ForegroundColor Yellow
} else {
    Write-Host "üìÅ Criando branch para atualiza√ß√£o..." -ForegroundColor Cyan
    git checkout -b feature/upgrade-dependencies
}

# Backup do package.json
Write-Host "üíæ Criando backup do package.json..." -ForegroundColor Cyan
Copy-Item "package.json" "package.json.backup"

# Limpar cache e depend√™ncias antigas
Write-Host "üßπ Limpando cache e depend√™ncias antigas..." -ForegroundColor Cyan

if (Get-Command "pnpm" -ErrorAction SilentlyContinue) {
    Write-Host "Usando PNPM..." -ForegroundColor Yellow
    pnpm store prune
    Remove-Item "pnpm-lock.yaml" -ErrorAction SilentlyContinue
} else {
    Write-Host "Usando NPM..." -ForegroundColor Yellow
    npm cache clean --force
    Remove-Item "package-lock.json" -ErrorAction SilentlyContinue
}

Remove-Item "node_modules" -Recurse -Force -ErrorAction SilentlyContinue

# Instalar novas depend√™ncias
Write-Host "üì¶ Instalando depend√™ncias atualizadas..." -ForegroundColor Cyan
if (Get-Command "pnpm" -ErrorAction SilentlyContinue) {
    pnpm install
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ö†Ô∏è  Erro na instala√ß√£o. Tentando com --force..." -ForegroundColor Yellow
        pnpm install --force
    }
} else {
    npm install
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ö†Ô∏è  Erro na instala√ß√£o. Tentando com --force..." -ForegroundColor Yellow
        npm install --force
    }
}

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Depend√™ncias instaladas com sucesso!" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erro na instala√ß√£o das depend√™ncias." -ForegroundColor Red
    Write-Host "üìÑ Consulte o arquivo UPGRADE_PLAN.md para solu√ß√£o de problemas." -ForegroundColor Yellow
    exit 1
}

# Executar codemods
Write-Host "üîÑ Executando codemods de migra√ß√£o..." -ForegroundColor Cyan

Write-Host "   Executando React 19 migration..." -ForegroundColor Yellow
npx codemod@latest react/19/migration-recipe --dry

$confirm = Read-Host "Aplicar migrations do React 19? (y/N)"
if ($confirm -eq "y" -or $confirm -eq "Y") {
    npx codemod@latest react/19/migration-recipe
}

Write-Host "   Executando Next.js 15 migration..." -ForegroundColor Yellow
npx @next/codemod@canary upgrade latest

# Verificar instala√ß√£o
Write-Host "üîç Verificando instala√ß√£o..." -ForegroundColor Cyan

Write-Host "Testando build..." -ForegroundColor Yellow
if (Get-Command "pnpm" -ErrorAction SilentlyContinue) {
    pnpm build
} else {
    npm run build
}

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Build realizado com sucesso!" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Problemas detectados no build. Verifique os logs acima." -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üìã RESUMO DA ATUALIZA√á√ÉO:" -ForegroundColor Green
Write-Host "   ‚Ä¢ React: 19.0.0 (est√°vel)" -ForegroundColor White
Write-Host "   ‚Ä¢ Next.js: 15.2.5 (est√°vel)" -ForegroundColor White  
Write-Host "   ‚Ä¢ react-day-picker: 9.7.0 (compat√≠vel com date-fns 4.x)" -ForegroundColor White
Write-Host "   ‚Ä¢ Todas as depend√™ncias do Radix UI atualizadas" -ForegroundColor White

Write-Host ""
Write-Host "üìù PR√ìXIMOS PASSOS:" -ForegroundColor Yellow
Write-Host "   1. Verifique o arquivo UPGRADE_PLAN.md para mudan√ßas manuais necess√°rias" -ForegroundColor White
Write-Host "   2. Execute 'pnpm dev' ou 'npm run dev' para testar em desenvolvimento" -ForegroundColor White
Write-Host "   3. Teste todos os componentes de calend√°rio/data" -ForegroundColor White
Write-Host "   4. Verifique se h√° erros de TypeScript ou hidrata√ß√£o" -ForegroundColor White

if (Test-Path "package.json.backup") {
    Write-Host ""
    Write-Host "üíæ Backup salvo em: package.json.backup" -ForegroundColor Cyan
    Write-Host "   Para reverter: Copy-Item 'package.json.backup' 'package.json'" -ForegroundColor Cyan
}

Write-Host ""
Write-Host "‚ú® Atualiza√ß√£o conclu√≠da! Confira o UPGRADE_PLAN.md para detalhes." -ForegroundColor Green 